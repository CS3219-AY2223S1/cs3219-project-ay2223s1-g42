{
  "env": {
    "browser": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "rules": {
    "@typescript-eslint/ban-ts-comment": "warn",
    "no-use-before-define": "error",
    "react/prop-types": "error",
    "react/no-unescaped-entities": "error",
    "react/display-name": "error",
    "react/react-in-jsx-scope": "off",
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    // https://github.com/typescript-eslint/typescript-eslint/issues/2063#issuecomment-675156492=
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "curly": ["error", "all"],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      // Functions may be components in PascalCase
      {
        "selector": "function",
        "format": ["PascalCase", "camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["PascalCase", "camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "modifiers": ["global"],
        "format": ["PascalCase", "camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": "objectLiteralProperty",
        "format": null
      },
      // Sometimes type property might be components in PascalCase
      {
        "selector": "typeProperty",
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ]
  }
}
