// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model QuestionSummary {
  id               Int              @id @unique @default(autoincrement())
  acRate           Float
  difficulty       String
  paidOnly         Boolean
  title            String
  titleSlug        String           @unique
  hasSolution      Boolean
  hasVideoSolution Boolean
  isDailyQuestion  Boolean          @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  topicTags        TopicTag[]
  QuestionContent  QuestionContent?

  @@index([titleSlug])
}

model TopicTag {
  id                Int               @id @default(autoincrement())
  name              String            @unique
  questionSummaries QuestionSummary[]

  @@index([name])
}

model QuestionContent {
  id        Int             @id @default(autoincrement())
  content   Bytes
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  titleSlug String          @unique
  summary   QuestionSummary @relation(fields: [titleSlug], references: [titleSlug])
  hints     QuestionHint[]

  @@index([titleSlug])
}

model QuestionHint {
  hintId            Int             @id @unique @default(autoincrement())
  hintBuffer        Bytes
  QuestionContent   QuestionContent @relation(fields: [questionContentId], references: [id])
  questionContentId Int
}

// model QuestionContent {
//   id                Int             @id @default(autoincrement())
//   content           Bytes
//   createdAt         DateTime        @default(now())
//   updatedAt         DateTime        @updatedAt
//   hints             QuestionHint[]
//   titleSlug         String          @unique
//   topicTags         TopicTag[]
//   questionSummary   QuestionSummary @relation(fields: [questionSummaryId], references: [id])
//   questionSummaryId Int             @unique

//   @@index([titleSlug])
// }

// model QuestionHint {
//   id                Int              @id @default(autoincrement())
//   hint              Bytes
//   QuestionContent   QuestionContent? @relation(fields: [questionContentId], references: [id])
//   questionContentId Int?
// }
